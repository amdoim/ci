// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId  Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  css    String?
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int     @unique
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  posts    Post[]
  profile  Profile?
  ranking  Int      @default(0)
  role     Int      @default(3)
  active   Boolean  @default(true)
  shift    Shift
  class    Classes?
  password String
  born     String
  keyTec   String   @unique
  cash     Decimal  @default(0)
  debit    Decimal  @default(0)
}

model News {
  id      Int     @id @default(autoincrement())
  title   String
  content String
  active  Boolean
  image   String?
}

model Ads {
  id    Int    @id @default(autoincrement())
  name  String
  link  String
  image String
  type  Int
}

model ToDo {
  id    Int     @id @default(autoincrement())
  name  String
  link  String
  value Decimal
}

model TalktoUs {
  id  Int    @id @default(autoincrement())
  msg String
}

model Report {
  id          Int     @id @default(autoincrement())
  tecReported String
  msg         String
  image       String?
}

model Classes {
  id          Int     @id @default(autoincrement())
  name String
  shift Shift
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int     @unique
}

model Reserve {
  id    Int     @id @default(autoincrement())
  name  String
  value Decimal
  new   Boolean
}

model DataStorage {
  id        Int     @id @default(autoincrement())
  tableName String
  data      Json    @db.Json
}

enum Shift {
  Matutino
  Vespertino
  Noturno
  Integral
}
